[agent]
  interval = "10s"                       # Abfrageintervall für alle Inputs
  flush_interval = "10s"                 # Outputintervall für alle Metriken
  round_interval = true                  # Rundet das Abfrageintervall auf 'interval'
  metric_batch_size = 1000               # Maximale Anzahl von Metriken, pro Batch
  metric_buffer_limit = 10000            # Maximale Anzahl von gepufferten Metriken
  collection_jitter = "0s"               # Abweichung von "interval" 
  flush_jitter = "0s"                    # zufällig abgefragt geschrieben werden
  precision = "1ns"                      # Rundung der Zeitstempel 
  debug = true

[[inputs.mqtt_consumer]]                # MQTT-Input
  servers = ["tcp://mosquitto:1884"]    # Adresse des MQTT-Brokers
  topics = [                            # MQTT-Topics, die berücksichtigt werden sollen
    "data/raw/sensor",
    "data/raw/edge"
    ]               
  qos = 1                               # Quality of Service (QoS)
  data_format = "json"                  # Nachrichtenformat: JSON
  tag_keys = [                          # Schlüssel werden als Tags interpretiert
    "location", "device", "dataType" , "sensitivity", "messrichtung", "notizen", 
    "einheit", "measuredQuantity", "sampleRate", "channelNumber"
    ]    
  json_string_fields = ["channelName"]  # Schlüssel werden als String-Feld interpretiert
  json_time_key = "time"                # Schlüssel wird als Zeitstempel interpretiert
  json_time_format = "unix_ns"          # Zeitformat: Unix-ns
  json_name_key = "measurementName"     # Schlüssel wird als Messungsname interpretiert

[[outputs.influxdb_v2]]                 # InfluxDB-Output
  urls = ["http://influxdb:8086"]
  token = "your_token_here"
  organization = "my-org"
  bucket = "daten-roh"


