events {
    worker_connections 1024;
}

http {
    log_format debuglog '$remote_addr - $remote_user [$time_local] "$request" '
                        'body=$request_body, headers=$http_content_type';

    access_log /var/log/nginx/access.log debuglog;

    server {
        listen 80;

        location / {
            proxy_pass http://http_to_mqtt_service:9910;

            # ðŸ”¥ CORS-Header setzen (WICHTIG fÃ¼r Browser)
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

            # ðŸ›  OPTIONS-Requests korrekt behandeln
            if ($request_method = OPTIONS) {
                return 204;
            }

            # ðŸŒŸ Lua: JSON-Body aus Anfrage umwandeln
            content_by_lua_block {
                ngx.req.read_body()  -- Lese den Request-Body
                local body_data = ngx.req.get_body_data()

                -- Falls kein Body vorhanden ist, nutze einen Default-Wert
                local rhs_value = "0"
                if body_data then
                    local cjson = require "cjson.safe"
                    local json_body = cjson.decode(body_data)
                    if json_body and json_body.rhs then
                        rhs_value = json_body.rhs
                    end
                end

                -- Erstelle neuen JSON-Body mit MATLAB-Format
                local new_body = cjson.encode({nargout = 1, rhs = {rhs_value}})
                ngx.req.set_body_data(new_body)

                -- ðŸ›  Stelle sicher, dass CORS-Header weiterhin gesetzt sind
                ngx.header["Access-Control-Allow-Origin"] = "*"
                ngx.header["Access-Control-Allow-Methods"] = "GET, POST, OPTIONS"
                ngx.header["Access-Control-Allow-Headers"] = "Content-Type, Authorization"

                ngx.req.set_header("Content-Type", "application/json")
            }
        }
    }
}